generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model category {
  id              Int               @id(map: "PK_9c4e4a89e3674fc9f382d733f03") @default(autoincrement())
  slug            String            @unique(map: "UQ_cb73208f151aa71cdd78f662d70") @db.VarChar(255)
  category_id     Int?
  created_at      DateTime          @default(now()) @db.Timestamp(6)
  updated_at      DateTime          @default(now()) @db.Timestamp(6)
  category        category?         @relation("categoryTocategory", fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_cc7f32b7ab33c70b9e715afae84")
  other_category  category[]        @relation("categoryTocategory")
  category_locale category_locale[]
  secret          secret[]
}

model category_locale {
  category_id Int
  locale_id   Int
  name        String   @db.VarChar
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  locale      locale   @relation(fields: [locale_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_42628cb0187a1a24f9fedaf0283")
  category    category @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_c1b493b4088aac71fcfc899a597")

  @@id([category_id, locale_id], map: "PK_e56abeb6623877833eb81839ab4")
}

model country {
  id                   Int                    @id(map: "PK_bf6e37c231c4f4ea56dcd887269") @default(autoincrement())
  code                 String                 @db.VarChar
  created_at           DateTime               @default(now()) @db.Timestamp(6)
  updated_at           DateTime               @default(now()) @db.Timestamp(6)
  country_locale       country_locale[]
  person_address       person_address[]
  person_document      person_document[]
  person_document_type person_document_type[]
}

model country_locale {
  country_id Int
  locale_id  Int
  name       String   @db.VarChar
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  locale     locale   @relation(fields: [locale_id], references: [id], onUpdate: NoAction, map: "FK_a9c5e221cc5ea25684c6e486b86")
  country    country  @relation(fields: [country_id], references: [id], onUpdate: NoAction, map: "FK_f6078a6569013351b3a316f8f98")

  @@id([country_id, locale_id], map: "PK_df7141e9042d27d998b49a9b325")
}

model dashboard {
  id               Int                @id(map: "PK_233ed28fa3a1f9fbe743f571f75") @default(autoincrement())
  slug             String             @unique(map: "UQ_49de5ef1bf76edb040ae4e91b0d") @db.VarChar(255)
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  dashboard_item   dashboard_item[]
  dashboard_locale dashboard_locale[]
}

model dashboard_component {
  id                         Int                          @id(map: "PK_0db8e7613dacbccf226113cb128") @default(autoincrement())
  slug                       String                       @unique(map: "UQ_61131edec39967aeebdb9749859") @db.VarChar(255)
  path                       String                       @db.VarChar(500)
  min_width                  Int                          @default(1)
  max_width                  Int?
  min_height                 Int                          @default(1)
  max_height                 Int?
  width                      Int
  height                     Int
  is_resizable               Boolean                      @default(true)
  created_at                 DateTime                     @default(now()) @db.Timestamp(6)
  updated_at                 DateTime                     @default(now()) @db.Timestamp(6)
  dashboard_component_locale dashboard_component_locale[]
  dashboard_item             dashboard_item[]
}

model dashboard_component_locale {
  component_id        Int
  locale_id           Int
  name                String              @db.VarChar(255)
  created_at          DateTime            @default(now()) @db.Timestamp(6)
  updated_at          DateTime            @default(now()) @db.Timestamp(6)
  dashboard_component dashboard_component @relation(fields: [component_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_0f2eba6ea6564d58125eb0a34b4")
  locale              locale              @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_1caa002d6c3f5d188e3d992a922")

  @@id([component_id, locale_id], map: "PK_4c64473f04145378896f0e2bd50")
}

model dashboard_item {
  id                  Int                 @id(map: "PK_4ad9d196b68ca545a9a52535ed1") @default(autoincrement())
  component_id        Int
  dashboard_id        Int
  width               Int
  height              Int
  x_axis              Int
  y_axis              Int
  created_at          DateTime            @default(now()) @db.Timestamp(6)
  updated_at          DateTime            @default(now()) @db.Timestamp(6)
  dashboard_component dashboard_component @relation(fields: [component_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_3a78515cb558278423e37cbee3e")
  dashboard           dashboard           @relation(fields: [dashboard_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_c6b6fb41935b6164a280c5a61e5")
  dashboard_user      dashboard_user[]
}

model dashboard_locale {
  dashboard_id Int
  locale_id    Int
  name         String    @db.VarChar(255)
  created_at   DateTime  @default(now()) @db.Timestamp(6)
  updated_at   DateTime  @default(now()) @db.Timestamp(6)
  dashboard    dashboard @relation(fields: [dashboard_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_715cebc1d9efa853ee50734bc64")
  locale       locale    @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_d567466467ab5a0b9f8a2bc5175")

  @@id([dashboard_id, locale_id], map: "PK_c345a8463f40f6d7b9aa585d06e")
}

model dashboard_user {
  id             Int            @id(map: "PK_450acb76f1434b5b7119637e94a") @default(autoincrement())
  item_id        Int
  user_id        Int
  width          Int
  height         Int
  x_axis         Int
  y_axis         Int
  created_at     DateTime       @default(now()) @db.Timestamp(6)
  updated_at     DateTime       @default(now()) @db.Timestamp(6)
  user           user           @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_8f31fe77228612efaa2385eaa6c")
  dashboard_item dashboard_item @relation(fields: [item_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_c2d94e6302ebca142bb77db81d8")
}

model file {
  id            Int            @id(map: "PK_36b46d232307066b3a2c9ea3a1d") @default(autoincrement())
  filename      String         @db.VarChar
  path          String         @db.VarChar
  provider_id   Int
  location      String         @db.VarChar
  mimetype_id   Int
  size          Int            @default(0)
  created_at    DateTime       @default(now()) @db.Timestamp(6)
  updated_at    DateTime       @default(now()) @db.Timestamp(6)
  file_mimetype file_mimetype  @relation(fields: [mimetype_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_893f78c26bcde79a87cc0fe45a5")
  file_provider file_provider  @relation(fields: [provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_afb71f4bd9709183d4f8d4c8ad2")
  organization  organization[]
  person        person[]
  secret        secret[]
  team          team[]
  vault         vault[]
}

model file_mimetype {
  id         Int      @id(map: "PK_893f78c26bcde79a87cc0fe45a5") @default(autoincrement())
  name       String   @db.VarChar
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  file       file[]
}

model file_provider {
  id                   Int                    @id(map: "PK_afb71f4bd9709183d4f8d4c8ad2") @default(autoincrement())
  slug                 String                 @db.VarChar
  created_at           DateTime               @default(now()) @db.Timestamp(6)
  updated_at           DateTime               @default(now()) @db.Timestamp(6)
  file                 file[]
  file_provider_locale file_provider_locale[]
}

model file_provider_locale {
  provider_id   Int
  locale_id     Int
  name          String        @db.VarChar
  created_at    DateTime      @default(now()) @db.Timestamp(6)
  updated_at    DateTime      @default(now()) @db.Timestamp(6)
  file_provider file_provider @relation(fields: [provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_3ebdcb105301319377557c272bc")
  locale        locale        @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_4fba1720defa9d0f6a9112ddc89")

  @@id([provider_id, locale_id], map: "PK_c108e943a38100608cfae509b3a")
}

model locale {
  id                          Int                           @id(map: "PK_4b7a3ebe8ec48f1bb2c4b80e349") @default(autoincrement())
  code                        String                        @unique(map: "UQ_03f3269461e7b003dca6b1699f4") @db.Char(2)
  region                      String                        @db.Char(2)
  enabled                     Boolean                       @default(true)
  created_at                  DateTime                      @default(now()) @db.Timestamp(6)
  updated_at                  DateTime                      @default(now()) @db.Timestamp(6)
  category_locale             category_locale[]
  country_locale              country_locale[]
  dashboard_component_locale  dashboard_component_locale[]
  dashboard_locale            dashboard_locale[]
  file_provider_locale        file_provider_locale[]
  mail_locale                 mail_locale[]
  menu_locale                 menu_locale[]
  multifactor_locale          multifactor_locale[]
  person_address_type_locale  person_address_type_locale[]
  person_contact_type_locale  person_contact_type_locale[]
  person_custom_locale        person_custom_locale[]
  person_custom_type_locale   person_custom_type_locale[]
  person_document_type_locale person_document_type_locale[]
  person_type_locale          person_type_locale[]
  role_locale                 role_locale[]
  screen_locale               screen_locale[]
  setting_group_locale        setting_group_locale[]
  setting_locale              setting_locale[]
  tag_locale                  tag_locale[]
  translation                 translation[]
}

model mail {
  id          Int           @id(map: "PK_5407da42b983ba54c6c62d462d3") @default(autoincrement())
  slug        String        @unique(map: "UQ_a33780fee5a320eaff8caff4b60") @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  mail_locale mail_locale[]
  mail_sent   mail_sent[]
  mail_var    mail_var[]
}

model mail_locale {
  mail_id    Int
  locale_id  Int
  subject    String   @db.VarChar
  body       String   @db.VarChar
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  mail       mail     @relation(fields: [mail_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_015df518bb5e8b58fb22d3f65eb")
  locale     locale   @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_625e760da559650587143929b86")

  @@id([mail_id, locale_id], map: "PK_f20e01e389b6a9f9edfee2aaea5")
}

model mail_sent {
  id         Int      @id(map: "PK_e270163b87ab8ee62cd8f3d4d53") @default(autoincrement())
  mail_id    Int
  subject    String   @db.VarChar
  from       String   @db.VarChar
  to         String?  @db.VarChar
  cc         String?  @db.VarChar
  bcc        String?  @db.VarChar
  body       String   @db.VarChar
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  mail       mail     @relation(fields: [mail_id], references: [id], onDelete: Cascade, map: "FK_05010af2c9c832519a05780fba7")
}

model mail_var {
  id         Int      @id(map: "PK_1c8349729c6b8abfc8ae33dad2d") @default(autoincrement())
  mail_id    Int
  name       String   @db.VarChar
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  mail       mail     @relation(fields: [mail_id], references: [id], onDelete: Cascade, map: "FK_88b8d9fcc9196ba574fc588147c")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model menu {
  id          Int           @id(map: "PK_35b2a8f47d153ff7a41860cceeb") @default(autoincrement())
  menu_id     Int?
  slug        String        @unique(map: "UQ_c4d9533c4ce3f7902c786141e1a") @db.VarChar(255)
  url         String?       @db.VarChar
  order       Int           @default(0)
  icon        String?       @db.VarChar
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  menu        menu?         @relation("menuTomenu", fields: [menu_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_237a0fe43278378e9c5729d17af")
  other_menu  menu[]        @relation("menuTomenu")
  menu_locale menu_locale[]
  menu_screen menu_screen[]
  role_menu   role_menu[]
}

model menu_locale {
  menu_id    Int
  locale_id  Int
  name       String   @db.VarChar
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  locale     locale   @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_1647d7410791844eb6cc82c424c")
  menu       menu     @relation(fields: [menu_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_d375a8d5f738a3b2c4fb13c0609")

  @@id([menu_id, locale_id], map: "PK_c79932cd650be458f1540d97b08")
}

model menu_screen {
  menu_id   Int
  screen_id Int
  screen    screen @relation(fields: [screen_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_429d198bd0ea0d8ecee8426dea0")
  menu      menu   @relation(fields: [menu_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_de2545ba7d953ec8315ee340485")

  @@id([menu_id, screen_id], map: "PK_cefac3ef25311287e1b40c1059d")
}

model multifactor {
  id                 Int                  @id(map: "PK_dd28340c66eb211fbd352507167") @default(autoincrement())
  slug               String               @unique(map: "UQ_a108f605bb3787f098bd7169681") @db.VarChar(255)
  created_at         DateTime             @default(now()) @db.Timestamp(6)
  updated_at         DateTime             @default(now()) @db.Timestamp(6)
  multifactor_locale multifactor_locale[]
  user               user[]
}

model multifactor_locale {
  multifactor_id Int
  locale_id      Int
  name           String      @db.VarChar
  created_at     DateTime    @default(now()) @db.Timestamp(6)
  updated_at     DateTime    @default(now()) @db.Timestamp(6)
  multifactor    multifactor @relation(fields: [multifactor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_c2a20be9c49258c1d7ea96c818e")
  locale         locale      @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_d5f92b6d1e95a38b5af8470f2fe")

  @@id([multifactor_id, locale_id], map: "PK_1cc26c48643e0908951b8528fd9")
}

model person {
  id              Int               @id(map: "PK_5fdaf670315c4b7e70cce85daa3") @default(autoincrement())
  name            String            @db.VarChar(255)
  photo_id        Int?
  type_id         Int
  birth_at        DateTime?         @db.Date
  created_at      DateTime          @default(now()) @db.Timestamp(6)
  updated_at      DateTime          @default(now()) @db.Timestamp(6)
  file            file?             @relation(fields: [photo_id], references: [id], onUpdate: NoAction, map: "FK_0e7be389f108147763fc682c3c4")
  person_type     person_type       @relation(fields: [type_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_f900a8c313411c7da8fcbba7975")
  person_address  person_address[]
  person_contact  person_contact[]
  person_custom   person_custom[]
  person_document person_document[]
  person_user     person_user[]
  person_value    person_value[]
}

model person_address {
  id                  Int                 @id(map: "PK_cd587348ca3fec07931de208299") @default(autoincrement())
  person_id           Int
  country_id          Int
  type_id             Int
  primary             Boolean             @default(false)
  street              String              @db.VarChar(255)
  number              String?             @db.VarChar(15)
  complement          String?             @db.VarChar(255)
  district            String              @db.VarChar(255)
  city                String              @db.VarChar(255)
  state               String              @db.VarChar(255)
  postal_code         String              @db.VarChar(20)
  reference           String?             @db.VarChar(60)
  created_at          DateTime            @default(now()) @db.Timestamp(6)
  updated_at          DateTime            @default(now()) @db.Timestamp(6)
  person_address_type person_address_type @relation(fields: [type_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_98a56bf4ddb0cfdc34900b208e8")
  country             country             @relation(fields: [country_id], references: [id], onUpdate: NoAction, map: "FK_c84bf730e2289bce49328cf2d55")
  person              person              @relation(fields: [person_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_ce7df7591d4659be1f5f9218384")
}

model person_address_type {
  id                         Int                          @id(map: "PK_98a56bf4ddb0cfdc34900b208e8") @default(autoincrement())
  slug                       String                       @unique(map: "UQ_f86ef99dbbeeab917378b321b73") @db.VarChar(255)
  created_at                 DateTime                     @default(now()) @db.Timestamp(6)
  updated_at                 DateTime                     @default(now()) @db.Timestamp(6)
  person_address             person_address[]
  person_address_type_locale person_address_type_locale[]
}

model person_address_type_locale {
  type_id             Int
  locale_id           Int
  name                String              @db.VarChar(31)
  created_at          DateTime            @default(now()) @db.Timestamp(6)
  updated_at          DateTime            @default(now()) @db.Timestamp(6)
  person_address_type person_address_type @relation(fields: [type_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_475216891864d349bf90a734948")
  locale              locale              @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_8a2ce5d8f409bd9df2be9021cb5")

  @@id([type_id, locale_id], map: "PK_abe72c4220e51c9098dfc80eaf1")
}

model person_contact {
  id                  Int                 @id(map: "PK_1094fd036d694f9949ef1c19e39") @default(autoincrement())
  person_id           Int
  type_id             Int
  primary             Boolean             @default(false)
  value               String              @db.VarChar(255)
  created_at          DateTime            @default(now()) @db.Timestamp(6)
  updated_at          DateTime            @default(now()) @db.Timestamp(6)
  person_contact_type person_contact_type @relation(fields: [type_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_8b9415f3b74feaedaa9a168e2a9")
  person              person              @relation(fields: [person_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_ed78b7b2d50539bbc6796c70b4e")

  @@unique([person_id, type_id, value], map: "IDX_1c9c355240616acf5547da502b")
}

model person_contact_type {
  id                         Int                          @id(map: "PK_8b9415f3b74feaedaa9a168e2a9") @default(autoincrement())
  slug                       String                       @unique(map: "UQ_43846dd854b33149094feb9fb4e") @db.VarChar(255)
  created_at                 DateTime                     @default(now()) @db.Timestamp(6)
  updated_at                 DateTime                     @default(now()) @db.Timestamp(6)
  person_contact             person_contact[]
  person_contact_type_locale person_contact_type_locale[]
}

model person_contact_type_locale {
  type_id             Int
  locale_id           Int
  name                String              @db.VarChar(63)
  created_at          DateTime            @default(now()) @db.Timestamp(6)
  updated_at          DateTime            @default(now()) @db.Timestamp(6)
  person_contact_type person_contact_type @relation(fields: [type_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_365b4ca1cad686ffa840bd6377c")
  locale              locale              @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_b982e2621abaf3f9efd9af4d573")

  @@id([type_id, locale_id], map: "PK_15b4a1183c23cf4dedaae0014cb")
}

model person_custom {
  id                   Int                    @id(map: "PK_e418892d4f99f4f134ad258bfc4") @default(autoincrement())
  person_id            Int
  type_id              Int
  value                String?
  created_at           DateTime               @default(now()) @db.Timestamp(6)
  updated_at           DateTime               @default(now()) @db.Timestamp(6)
  person               person                 @relation(fields: [person_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_c27115f8d19d82195c606b7bcc3")
  person_custom_type   person_custom_type     @relation(fields: [type_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_e825bcc04099f5404c566de8b84")
  person_custom_locale person_custom_locale[]

  @@unique([person_id, type_id], map: "IDX_48703a5e36d343a9b33145fe51")
}

model person_custom_locale {
  custom_id     Int
  locale_id     Int
  name          String        @db.VarChar(31)
  created_at    DateTime      @default(now()) @db.Timestamp(6)
  updated_at    DateTime      @default(now()) @db.Timestamp(6)
  locale        locale        @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_25e4394cd983a5393fa880412d2")
  person_custom person_custom @relation(fields: [custom_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_ab0d1ed93722ccddfcb53652f47")

  @@id([custom_id, locale_id], map: "PK_231532c3290c4a720f1dff45564")
}

model person_custom_type {
  id                        Int                         @id(map: "PK_e825bcc04099f5404c566de8b84") @default(autoincrement())
  slug                      String                      @unique(map: "UQ_cffbae416f17b46f8ee51418720") @db.VarChar(255)
  created_at                DateTime                    @default(now()) @db.Timestamp(6)
  updated_at                DateTime                    @default(now()) @db.Timestamp(6)
  person_custom             person_custom[]
  person_custom_type_locale person_custom_type_locale[]
}

model person_custom_type_locale {
  type_id            Int
  locale_id          Int
  name               String             @db.VarChar(31)
  created_at         DateTime           @default(now()) @db.Timestamp(6)
  updated_at         DateTime           @default(now()) @db.Timestamp(6)
  locale             locale             @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_e9ac6d88013c883cd97bd2db28b")
  person_custom_type person_custom_type @relation(fields: [type_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_f3118c1eddf9114712c5accf71e")

  @@id([type_id, locale_id], map: "PK_f17d0fb0d468e783799bc5b3e26")
}

model person_document {
  id                   Int                  @id(map: "PK_bcc56725609d81e79e21031dd56") @default(autoincrement())
  person_id            Int
  type_id              Int
  country_id           Int
  primary              Boolean              @default(false)
  value                String               @db.VarChar(63)
  issued_at            DateTime?            @db.Date
  expiry_at            DateTime?            @db.Date
  created_at           DateTime             @default(now()) @db.Timestamp(6)
  updated_at           DateTime             @default(now()) @db.Timestamp(6)
  country              country              @relation(fields: [country_id], references: [id], onUpdate: NoAction, map: "FK_096c95b8ff0c64de1cfef949f87")
  person               person               @relation(fields: [person_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_3d2eefc8668f687831146947b31")
  person_document_type person_document_type @relation(fields: [type_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_866923f2a0938b2fe81b6de8367")

  @@unique([person_id, type_id, value], map: "IDX_610e49816c6705dc651e957d54")
}

model person_document_type {
  id                          Int                           @id(map: "PK_866923f2a0938b2fe81b6de8367") @default(autoincrement())
  country_id                  Int
  slug                        String                        @unique(map: "UQ_181b871128bea16a4ae019d31e3") @db.VarChar(255)
  created_at                  DateTime                      @default(now()) @db.Timestamp(6)
  updated_at                  DateTime                      @default(now()) @db.Timestamp(6)
  person_document             person_document[]
  country                     country                       @relation(fields: [country_id], references: [id], onUpdate: NoAction, map: "FK_9dc1f849a5626abefbc3bcc217a")
  person_document_type_locale person_document_type_locale[]
}

model person_document_type_locale {
  type_id              Int
  locale_id            Int
  name                 String               @db.VarChar(63)
  created_at           DateTime             @default(now()) @db.Timestamp(6)
  updated_at           DateTime             @default(now()) @db.Timestamp(6)
  locale               locale               @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_482ef3427c9e444d7c27fddcb81")
  person_document_type person_document_type @relation(fields: [type_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_61c74c3561c064a68d351103ddb")

  @@id([type_id, locale_id], map: "PK_a66b893bcdfc402febbb79227e7")
}

model person_type {
  id                 Int                  @id(map: "PK_f900a8c313411c7da8fcbba7975") @default(autoincrement())
  slug               String               @unique(map: "UQ_e450c84833fbeb5e6bce51b4805") @db.VarChar(255)
  created_at         DateTime             @default(now()) @db.Timestamp(6)
  updated_at         DateTime             @default(now()) @db.Timestamp(6)
  person             person[]
  person_type_locale person_type_locale[]
}

model person_type_locale {
  type_id     Int
  locale_id   Int
  name        String      @unique(map: "UQ_5d4c8dea076f83721ef1a631315") @db.VarChar(31)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  person_type person_type @relation(fields: [type_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_2eb1f7db6f53ac7dca9cbff7b76")
  locale      locale      @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_3cac1af04c04a72706ca0e73242")

  @@id([type_id, locale_id], map: "PK_817fb03a35a6d045af0ef30603c")
}

model person_user {
  id         Int      @id(map: "PK_5157fa65538cae06e66c922c898") @default(autoincrement())
  person_id  Int
  user_id    Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_c2feca123e94d41c2a5c7dac60c")
  person     person   @relation(fields: [person_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_d993d5deb3373b92ad6fb033dff")

  @@unique([person_id, user_id], map: "IDX_ef5e2f7360738679f7b658957f")
}

model person_value {
  id         Int      @id(map: "PK_85c28f48f06f5cc8291d45e1554") @default(autoincrement())
  person_id  Int
  value      String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  person     person   @relation(fields: [person_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_c14f1b61dff84649c565703578b")
}

model role {
  id          Int           @id(map: "PK_b36bcfe02fc8de3c57a8b2391c2") @default(autoincrement())
  slug        String        @unique(map: "UQ_35c9b140caaf6da09cfabb0d675") @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  role_locale role_locale[]
  role_menu   role_menu[]
  role_route  role_route[]
  role_screen role_screen[]
  role_user   role_user[]
}

model role_locale {
  role_id     Int
  locale_id   Int
  name        String   @db.VarChar
  description String   @db.VarChar
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  role        role     @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_2294c27f7b13ae4bd3edd845bfa")
  locale      locale   @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_2f1f8ebc571f696da89d584c250")

  @@id([role_id, locale_id], map: "PK_c259035e32b4022042cd99aa948")
}

model role_menu {
  role_id    Int
  menu_id    Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  role       role     @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_25f45e543fbda0c91da4af7a2a9")
  menu       menu     @relation(fields: [menu_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_96d26921e6aa2172256a55a6bc7")

  @@id([role_id, menu_id], map: "PK_ec8ce21a3846c0f4f3b59c3d310")
}

model role_route {
  role_id    Int
  route_id   Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  role       role     @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_cfb587091271544695118e9c05d")
  route      route    @relation(fields: [route_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_fb62a702db3d0b7f5588c4db7b2")

  @@id([role_id, route_id], map: "PK_925753da26ee2b077ab7428ed06")
}

model role_screen {
  role_id    Int
  screen_id  Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  role       role     @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_299ad30564c8266309fbebd05ab")
  screen     screen   @relation(fields: [screen_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_7313f91bf6d625f7e989d7cfc5a")

  @@id([role_id, screen_id], map: "PK_e12b4dd3c676dfc208c4d50366f")
}

model role_user {
  role_id    Int
  user_id    Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_5261e26da61ccaf8aeda8bca8ea")
  role       role     @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_78ee37f2db349d230d502b1c7ea")

  @@id([role_id, user_id], map: "PK_0d02ac0493a7a8193048bbc7da5")
}

model route {
  id           Int               @id(map: "PK_08affcd076e46415e5821acf52d") @default(autoincrement())
  url          String            @db.VarChar
  method       route_method_enum
  description  String?           @db.VarChar
  created_at   DateTime          @default(now()) @db.Timestamp(6)
  updated_at   DateTime          @default(now()) @db.Timestamp(6)
  role_route   role_route[]
  route_screen route_screen[]

  @@unique([url, method], map: "IDX_19974683ac52f73bd0d53aa39a")
}

model route_screen {
  route_id   Int
  screen_id  Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  route      route    @relation(fields: [route_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_6a7e17a4ddcf97e70ec825faff9")
  screen     screen   @relation(fields: [screen_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_e0c208670cd186fa86fd3190126")

  @@id([route_id, screen_id], map: "PK_76272b0e5954880b0cece9a0a05")
}

model screen {
  id            Int             @id(map: "PK_7d30806a7556636b84d24e75f4d") @default(autoincrement())
  slug          String          @unique(map: "UQ_3b15715a42af9a149b4391b3818") @db.VarChar(255)
  icon          String?         @db.VarChar
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  menu_screen   menu_screen[]
  role_screen   role_screen[]
  route_screen  route_screen[]
  screen_locale screen_locale[]
}

model screen_locale {
  screen_id   Int
  locale_id   Int
  name        String   @db.VarChar
  description String   @db.VarChar
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  locale      locale   @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_cb1dfd415b7d620999be342cb70")
  screen      screen   @relation(fields: [screen_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_cb802193d021bef9c3156143a73")

  @@id([screen_id, locale_id], map: "PK_1cd85e4f1dd3e6616bd6a960db2")
}

model setting {
  id             Int                     @id(map: "PK_fcb21187dc6094e24a48f677bed") @default(autoincrement())
  group_id       Int
  slug           String                  @unique(map: "UQ_a055323cfcbfdef8ab19b5e8b84") @db.VarChar(255)
  type           setting_type_enum       @default(string)
  value          String?                 @db.VarChar(1023)
  user_override  Boolean                 @default(false)
  created_at     DateTime                @default(now()) @db.Timestamp(6)
  updated_at     DateTime                @default(now()) @db.Timestamp(6)
  component      setting_component_enum? @default(input_text)
  setting_group  setting_group           @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_07f390cb981a5f4bb7a4a354d06")
  setting_list   setting_list[]
  setting_locale setting_locale[]
  setting_user   setting_user[]
}

model setting_group {
  id                   Int                    @id(map: "PK_07f390cb981a5f4bb7a4a354d06") @default(autoincrement())
  icon                 String                 @db.VarChar(31)
  slug                 String                 @unique(map: "UQ_761e8f4022a795ae7eee22581ca") @db.VarChar(255)
  created_at           DateTime               @default(now()) @db.Timestamp(6)
  updated_at           DateTime               @default(now()) @db.Timestamp(6)
  setting              setting[]
  setting_group_locale setting_group_locale[]
}

model setting_group_locale {
  locale_id     Int
  group_id      Int
  name          String        @db.VarChar(63)
  description   String?       @db.VarChar(255)
  created_at    DateTime      @default(now()) @db.Timestamp(6)
  updated_at    DateTime      @default(now()) @db.Timestamp(6)
  locale        locale        @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_5a216b58563d23ffe4fc47c2f81")
  setting_group setting_group @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_9e47153fd708717c436d3016908")

  @@id([locale_id, group_id], map: "PK_ba363f06d3eeec8e42345d205d1")
}

model setting_locale {
  locale_id   Int
  setting_id  Int
  description String?  @db.VarChar(255)
  name        String?  @db.VarChar(63)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  locale      locale   @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_1cfadfbb033b62b01e9241342ea")
  setting     setting  @relation(fields: [setting_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_f78068a8a9924c19c7d33e8bfb8")

  @@id([locale_id, setting_id], map: "PK_388a9fe9b33b00aff31d26f0912")
}

model setting_user {
  user_id    Int
  setting_id Int
  value      String?  @db.VarChar(1023)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_787278995b974bcb29ac98635e1")
  setting    setting  @relation(fields: [setting_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_9d2cd571c1eea2008632c07e95f")

  @@id([user_id, setting_id], map: "PK_9b9f9a08cecc632f2da8f12f4da")
}

model tag {
  id         Int          @id(map: "PK_8e4052373c579afc1471f526760") @default(autoincrement())
  slug       String       @unique(map: "UQ_3413aed3ecde54f832c4f44f045") @db.VarChar(255)
  created_at DateTime     @default(now()) @db.Timestamp(6)
  updated_at DateTime     @default(now()) @db.Timestamp(6)
  secret_tag secret_tag[]
  tag_locale tag_locale[]
}

model tag_locale {
  tag_id     Int
  locale_id  Int
  name       String   @db.VarChar
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  tag        tag      @relation(fields: [tag_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_600d97c71393728acec8db33aac")
  locale     locale   @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_86568e454bd38202edf01186a4d")

  @@id([tag_id, locale_id], map: "PK_9f1ae78c09ce4a2e1866c2f5b9a")
}

model translation {
  id                    Int                   @id(map: "PK_7aef875e43ab80d34a0cdd39c70") @default(autoincrement())
  locale_id             Int
  namespace_id          Int
  name                  String                @db.VarChar
  value                 String                @db.VarChar
  created_at            DateTime              @default(now()) @db.Timestamp(6)
  updated_at            DateTime              @default(now()) @db.Timestamp(6)
  locale                locale                @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_70a64feade03541926a4abffe16")
  translation_namespace translation_namespace @relation(fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_cf3aa3ba3594c508de49e411c2b")

  @@unique([locale_id, namespace_id, name], map: "IDX_86152a28a0b83d37df0bb67c85")
}

model translation_namespace {
  id          Int           @id(map: "PK_cf3aa3ba3594c508de49e411c2b") @default(autoincrement())
  name        String        @db.VarChar
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  translation translation[]
}

model user {
  id                 Int                  @id(map: "PK_cace4a159ff9f2512dd42373760") @default(autoincrement())
  multifactor_id     Int?
  name               String               @db.VarChar
  email              String               @unique(map: "UQ_e12875dfb3b1d92d7d7c5377e22") @db.VarChar
  password           String               @db.VarChar
  code               String?              @db.VarChar
  created_at         DateTime             @default(now()) @db.Timestamp(6)
  updated_at         DateTime             @default(now()) @db.Timestamp(6)
  dashboard_user     dashboard_user[]
  person_user        person_user[]
  role_user          role_user[]
  setting_user       setting_user[]
  team_user          team_user[]
  multifactor        multifactor?         @relation(fields: [multifactor_id], references: [id], onUpdate: NoAction, map: "FK_9b6db84173251ad3e643083250e")
  user_activity      user_activity[]
  user_code_recovery user_code_recovery[]
  user_key           user_key?
  vault_user         vault_user[]
}

model user_activity {
  id         Int      @id(map: "PK_daec6d19443689bda7d7785dff5") @default(autoincrement())
  user_id    Int
  ip         String   @db.VarChar
  user_agent String   @db.VarChar
  message    String   @db.VarChar
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_11108754ec780c670440e32baad")
}

model user_code_recovery {
  id         Int      @id(map: "PK_dc9b7c7e2b3aa6e50fb4d2bd155") @default(autoincrement())
  user_id    Int?
  code       String   @db.VarChar
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_1993b634e11cc6fd942dea1b435")
}

model metadata {
  id         Int                @id(map: "PK_56b22355e89941b9792c04ab176") @default(autoincrement())
  secret_id  Int
  name       String             @db.VarChar(45)
  encrypted  String
  iv         String             @db.VarChar(16)
  type       metadata_type_enum @default(text)
  order      Int                @default(0)
  created_at DateTime           @default(now()) @db.Timestamp(6)
  updated_at DateTime           @default(now()) @db.Timestamp(6)
  secret     secret             @relation(fields: [secret_id], references: [id], onDelete: Cascade, map: "FK_d476725d3c1c44f08641f6b868d")
}

model migrations {
  id        Int    @id(map: "PK_8c82d7f526340ab734260ea46be") @default(autoincrement())
  timestamp BigInt
  name      String @db.VarChar
}

model organization {
  id         Int      @id(map: "PK_472c1f99a32def1b0abb219cd67") @default(autoincrement())
  name       String   @db.VarChar(45)
  icon       Int?
  max_vault  Int      @default(1)
  max_secret Int      @default(10)
  max_user   Int      @default(1)
  max_team   Int      @default(1)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  file       file?    @relation(fields: [icon], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_d69caf5f555afcbe7c02768450f")
  team       team[]
}

model secret {
  id          Int          @id(map: "PK_6afa4961954e17ec2d6401afc3d") @default(autoincrement())
  vault_id    Int
  name        String       @db.VarChar(45)
  category_id Int?
  icon        Int?
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  metadata    metadata[]
  file        file?        @relation(fields: [icon], references: [id], onDelete: Cascade, map: "FK_09807962298a6e119a4aaa00c15")
  category    category?    @relation(fields: [category_id], references: [id], onDelete: Cascade, map: "FK_0fb7ff1b0f250b9c137fdefd3e4")
  vault       vault        @relation(fields: [vault_id], references: [id], onDelete: Cascade, map: "FK_e2b2ed2ecf2b2bf7a40a189b42a")
  secret_tag  secret_tag[]
}

model secret_tag {
  secret_id  Int
  tag_id     Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  tag        tag      @relation(fields: [tag_id], references: [id], onDelete: Cascade, map: "FK_21482927334552b67976f804fe1")
  secret     secret   @relation(fields: [secret_id], references: [id], onDelete: Cascade, map: "FK_be48fc38111077d3612a74a2077")

  @@id([secret_id, tag_id], map: "PK_09bb731202614a4d597692fa2dc")
}

model team {
  id              Int          @id(map: "PK_f57d8293406df4af348402e4b74") @default(autoincrement())
  name            String       @db.VarChar(45)
  icon            Int?
  organization_id Int
  created_at      DateTime     @default(now()) @db.Timestamp(6)
  updated_at      DateTime     @default(now()) @db.Timestamp(6)
  file            file?        @relation(fields: [icon], references: [id], onDelete: Cascade, map: "fk_icon_to_file")
  organization    organization @relation(fields: [organization_id], references: [id], onDelete: Cascade, map: "fk_team_to_organization")
  team_user       team_user[]
  team_vault      team_vault[]
}

model team_user {
  team_id    Int
  user_id    Int
  role       team_user_role_enum
  created_at DateTime               @default(now()) @db.Timestamp(6)
  updated_at DateTime               @default(now()) @db.Timestamp(6)
  status     team_user_status_enum? @default(pending)
  team       team                   @relation(fields: [team_id], references: [id], onDelete: Cascade, map: "fk_team_user_to_team")
  user       user                   @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "fk_team_user_to_user")

  @@id([team_id, user_id], map: "PK_8d359395d0718b15545c37c2a0c")
}

model team_vault {
  team_id  Int
  vault_id Int
  team     team  @relation(fields: [team_id], references: [id], onDelete: Cascade, map: "fk_team_valt_to_team")
  vault    vault @relation(fields: [vault_id], references: [id], onDelete: Cascade, map: "fk_team_valt_to_vault")

  @@id([team_id, vault_id], map: "PK_9621487bef926aac77fd4d1243d")
}

model user_key {
  user_id    Int      @id(map: "PK_a389817475d2824dd5ddca97ac4")
  public_key String   @db.VarChar(700)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_key_to_user")
}

model vault {
  id                                              Int           @id(map: "PK_dd0898234c77f9d97585171ac59") @default(autoincrement())
  name                                            String        @db.VarChar(45)
  icon                                            Int?
  created_at                                      DateTime      @default(now()) @db.Timestamp(6)
  updated_at                                      DateTime      @default(now()) @db.Timestamp(6)
  secret                                          secret[]
  team_vault                                      team_vault[]
  file                                            file?         @relation(fields: [icon], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_5b444086b836ae6fb63e007173a")
  vault_user                                      vault_user[]
  vault_vault_vault_vault_vault_id_relatedTovault vault_vault[] @relation("vault_vault_vault_id_relatedTovault")
  vault_vault_vault_vault_vault_idTovault         vault_vault[] @relation("vault_vault_vault_idTovault")
}

model vault_user {
  vault_id   Int
  user_id    Int
  kek        String
  created_at DateTime             @default(now()) @db.Timestamp(6)
  role       vault_user_role_enum
  updated_at DateTime             @default(now()) @db.Timestamp(6)
  user       user                 @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "fk_vault_user_to_user")
  vault      vault                @relation(fields: [vault_id], references: [id], onDelete: Cascade, map: "fk_vault_user_to_vault")

  @@id([vault_id, user_id], map: "PK_4c88bf10ae99408d6df4c2a524a")
}

model vault_vault {
  vault_id                                  Int
  vault_id_related                          Int
  created_at                                DateTime @default(now()) @db.Timestamp(6)
  updated_at                                DateTime @default(now()) @db.Timestamp(6)
  vault_vault_vault_vault_id_relatedTovault vault    @relation("vault_vault_vault_id_relatedTovault", fields: [vault_id_related], references: [id], onDelete: Cascade, map: "FK_277ce9eea169297931d0604130f")
  vault_vault_vault_vault_idTovault         vault    @relation("vault_vault_vault_idTovault", fields: [vault_id], references: [id], onDelete: Cascade, map: "FK_51029450e633057e2b323011070")

  @@id([vault_id, vault_id_related], map: "PK_97bc1dc0c78494e57a7f00f557c")
}

model setting_list {
  id         Int      @id @default(autoincrement())
  setting_id Int
  order      Int      @default(0)
  value      String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  setting    setting  @relation(fields: [setting_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_setting_list_setting")
}

enum route_method_enum {
  GET
  POST
  PATCH
  DELETE
  PUT
  OPTIONS
  HEAD
}

enum setting_type_enum {
  string
  array
  number
  boolean
  json
}

enum metadata_type_enum {
  text
  url
  email
  date
  month_year @map("month-year")
  otp
  password
  phone
  file
}

enum setting_component_enum {
  input_text   @map("input-text")
  input_number @map("input-number")
  combobox
  radio
  color_picker @map("color-picker")
  switch
  checkbox
}

enum team_user_role_enum {
  owner
  editor
  reader
}

enum team_user_status_enum {
  pending
  accepted
  declined
}

enum vault_role {
  owner
  editor
  reader
}

enum vault_user_role_enum {
  owner
  editor
  reader
}
